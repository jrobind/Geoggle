@import 'variables';

// flexbox mixins

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// nowrap | wrap | wrap-reverse
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
       -moz-flex-direction: $direction;
        -ms-flex-direction: $direction;
            flex-direction: $direction;
}

// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
  	  -ms-flex: $values;
  	      flex: $values;
}

// flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

// default button mixins

@mixin default-button($padding) {
    padding: $padding;
    background-color: $mainColour;
    border: none;
    color: $mainTextColour;
    border: 2px solid $mainColour;
    border-radius: 5px;
    font-size: 0.9em;
    font-weight: $bold;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    &:hover{ 
        background-color: transparent;
        transition: 0.4s;
    }
}

// h1 style

@mixin heading($fontSize) {
    font-size: $fontSize;
    color: $mainTextColour;
    margin: 0 0 20px 0;
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);
}

// media query 

@mixin mediaQuery($pixels) {
    @media screen and (max-width: $pixels) {
        @content;
    }
}
